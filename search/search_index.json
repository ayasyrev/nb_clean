{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"nbmetaclean","text":"<p>Collections of python scripts for checking and cleaning Jupyter Notebooks metadata, execution_count and optionally output. Can be used as command line tool or pre-commit hook.</p> <p>Pure Python, no dependencies.</p> <p>Can be used as a pre-commit hook or as a command line tool.</p> <p> </p>"},{"location":"#nbmetaclean_1","title":"nbmetaclean","text":"<p>Clean Jupyter Notebooks metadata, execution_count and optionally output.</p>"},{"location":"#nbcheck","title":"nbcheck","text":"<p>Check Jupyter Notebooks for errors and (or) warnings in outputs.</p>"},{"location":"#base-usage","title":"Base usage","text":""},{"location":"#pre-commit-hook","title":"Pre-commit hook","text":"<p>Nbmetaclean can be used as a pre-commit hook, with pre-commit You do not need to install nbmetaclean, it will be installed automatically. add to <code>.pre-commit-config.yaml</code>: <pre><code>repos:\n    - repo: https://github.com/ayasyrev/nbmetaclean\n        rev: 0.1.1\n        hooks:\n        - id: nbmetaclean\n        - id: nbcheck\n          args: [ --ec, --err, --warn ]\n</code></pre></p>"},{"location":"#command-line-tool","title":"Command line tool","text":""},{"location":"#without-install","title":"Without install:","text":"<p>If you use uv package manager, you can nbmetaclean without install. To clean notebooks: <pre><code>uvx nbmetaclean\n</code></pre> To check notebooks: <pre><code>uvx --from nbmetaclean nbcheck --ec --err --warn\n</code></pre></p>"},{"location":"#install","title":"Install:","text":"<pre><code>pip install nbmetaclean\n</code></pre> <p>Usage: run <code>nbmetaclean</code> or <code>nbcheck</code> command with <code>path</code> to notebook or folder with notebooks. If no <code>path</code> is provided, current directory will be used as <code>path</code>.</p> <p>It is possible to use <code>nbclean</code> command instead of <code>nbmetaclean</code>. <code>nbmetaclean</code> will be used by defaults in favour of usage with <code>uvx</code></p> <pre><code>nbmetaclean\n</code></pre> <p><code>nbcheck</code> should be run with flags: - <code>--ec</code> for execution_count check - <code>--err</code> for check errors in outputs - <code>--warn</code> for check warnings in outputs <pre><code>nbcheck --ec --err --warn\n</code></pre></p>"},{"location":"#nbmetaclean_2","title":"Nbmetaclean","text":""},{"location":"#default-settings","title":"Default settings","text":"<p>By default, the following settings are used:</p> <ul> <li>Clean notebook metadata, except <code>authors</code> and <code>language_info / name</code>.</li> <li>Clean cells execution_count.</li> <li>Preserve metadata at  cells.</li> <li>Preserve cells outputs.</li> <li>After cleaning notebook, timestamp for file will be set to previous values.</li> </ul>"},{"location":"#arguments","title":"Arguments","text":"<p>Check available arguments:</p> <pre><code>nbmetaclean -h\n\nusage:  nbmetaclean [-h] [-s] [--not_ec] [--not-pt] [--dont_clear_nb_metadata] [--clear_cell_metadata] [--clear_outputs]\n[--nb_metadata_preserve_mask NB_METADATA_PRESERVE_MASK [NB_METADATA_PRESERVE_MASK ...]]\n[--cell_metadata_preserve_mask CELL_METADATA_PRESERVE_MASK [CELL_METADATA_PRESERVE_MASK ...]] [--dont_merge_masks] [--clean_hidden_nbs] [-D] [-V]\n[path ...]\n\nClean metadata and execution_count from Jupyter notebooks.\n\npositional arguments:\n  path                  Path for nb or folder with notebooks.\n\noptions:\n  -h, --help            show this help message and exit\n  -s, --silent          Silent mode.\n  --not_ec              Do not clear execution_count.\n  --not-pt              Do not preserve timestamp.\n  --dont_clear_nb_metadata\n                        Do not clear notebook metadata.\n  --clear_cell_metadata\n                        Clear cell metadata.\n  --clear_outputs       Clear outputs.\n  --nb_metadata_preserve_mask NB_METADATA_PRESERVE_MASK [NB_METADATA_PRESERVE_MASK ...]\n                        Preserve mask for notebook metadata.\n  --cell_metadata_preserve_mask CELL_METADATA_PRESERVE_MASK [CELL_METADATA_PRESERVE_MASK ...]\n                        Preserve mask for cell metadata.\n  --dont_merge_masks    Do not merge masks.\n  --clean_hidden_nbs    Clean hidden notebooks.\n  -D, --dry_run         perform a trial run, don't write results\n  -V, --verbose         Verbose mode. Print extra information.\n</code></pre>"},{"location":"#execution_count","title":"Execution_count","text":"<p>If you want to leave execution_count add <code>--not_ec</code> flag at command line or <code>args: [--not_ec]</code> line to <code>.pre-commit-config.yaml</code>.</p> <pre><code>repos:\n    - repo: https://github.com/ayasyrev/nbmetaclean\n        rev: 0.1.1\n        hooks:\n        - id: nbmetaclean\n          args: [ --not_ec ]\n</code></pre> <pre><code>nbmetaclean --not_ec\n</code></pre>"},{"location":"#clear-outputs","title":"Clear outputs","text":"<p>If you want to clear outputs, add <code>--clear_outputs</code> at command line or <code>[ --clean_outputs ]</code> line to <code>.pre-commit-config.yaml</code>. <pre><code>repos:\n    - repo: https://github.com/ayasyrev/nbmetaclean\n        rev: 0.1.1\n        hooks:\n        - id: nbmetaclean\n          args: [ --clean_outputs ]\n</code></pre></p> <pre><code>nbmetaclean --clean_outputs\n</code></pre>"},{"location":"#nbcheck_1","title":"Nbcheck","text":"<p>Check Jupyter Notebooks for correct execution_count, errors and (or) warnings in outputs.</p>"},{"location":"#execution_count_1","title":"Execution_count","text":"<p>Check that all code cells executed one after another.</p>"},{"location":"#strict-mode","title":"Strict mode","text":"<p>By default, execution_count check in <code>strict</code> mode. All cells must be executed, one after another.</p> <p>pre-commit config example: <pre><code>repos:\n    - repo: https://github.com/ayasyrev/nbmetaclean\n        rev: 0.1.1\n        hooks:\n        - id: nbcheck\n          args: [ --ec ]\n</code></pre></p> <p>command line example: <pre><code>nbcheck --ec\n</code></pre></p>"},{"location":"#not-strict-mode","title":"Not strict mode","text":"<p><code>--not_strict</code> flag can be used to check that next cell executed after previous one, but execution number can be more than <code>+1</code>.</p> <p>pre-commit config example: <pre><code>repos:\n    - repo: https://github.com/ayasyrev/nbmetaclean\n        rev: 0.1.1\n        hooks:\n        - id: nbcheck\n          args: [ --ec, --not_strict ]\n</code></pre></p> <p>command line example: <pre><code>nbcheck --ec --not_strict\n</code></pre></p>"},{"location":"#allow-notebooks-with-no-execution_count","title":"Allow notebooks with no execution_count","text":"<p><code>--no_exec</code> flag allows notebooks with all cells without execution_count. If notebook has cells with execution_count and without execution_count, pre-commit will return error.</p> <p>pre-commit config example: <pre><code>repos:\n    - repo: https://github.com/ayasyrev/nbmetaclean\n        rev: 0.1.1\n        - id: nbcheck\n          args: [ --ec, --no_exec ]\n</code></pre></p> <p>command line example: <pre><code>nbcheck --ec --no_exec\n</code></pre></p>"},{"location":"#errors-and-warnings","title":"Errors and Warnings","text":"<p><code>--err</code> and <code>--warn</code> flags can be used to check for errors and warnings in outputs.</p> <p>pre-commit config example: <pre><code>repos:\n    - repo: https://github.com/ayasyrev/nbmetaclean\n        rev: 0.1.1\n        hooks:\n        - id: nbcheck\n          args: [ --err, --warn ]\n</code></pre></p> <p>command line example: <pre><code>nbcheck --err --warn\n</code></pre></p>"}]}